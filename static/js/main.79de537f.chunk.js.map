{"version":3,"sources":["../external \"Cesium\"","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Cesium","data","name","type","Latitude","Longitude","App","full","position","Cartesian3","fromDegrees","description","pixelSize","color","Color","RED","map","d","i","BLUE","destination","duration","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qFAAAA,EAAOC,QAAUC,Q,yJCKXC,EAAO,CACX,CACEC,KAAM,WACNC,KAAM,OACNC,SAAU,kBACVC,WAAY,oBAEd,CACEH,KAAM,WACNC,KAAM,OACNC,SAAU,kBACVC,WAAY,oBAEd,CACEH,KAAM,WACNC,KAAM,OACNC,SAAU,kBACVC,WAAY,oBAEd,CACEH,KAAM,WACNC,KAAM,OACNC,SAAU,kBACVC,WAAY,oBAEd,CACEH,KAAM,WACNC,KAAM,OACNC,SAAU,eACVC,WAAY,oBAEd,CACEH,KAAM,WACNC,KAAM,OACNC,SAAU,mBACVC,WAAY,oBAEd,CACEH,KAAM,WACNC,KAAM,OACNC,SAAU,kBACVC,WAAY,oBAEd,CACEH,KAAM,WACNC,KAAM,OACNC,SAAU,mBACVC,WAAY,qBAuCGC,MAnCnB,WACE,OACE,eAAC,IAAD,CAAQC,MAAI,EAAZ,UACE,cAAC,IAAD,CACEC,SAAUC,aAAWC,aAClB,mBACD,mBAEFR,KAAM,SACNS,YAAa,OANf,SAQE,cAAC,IAAD,CAAeC,UAAW,GAAIC,MAAOC,QAAMC,QAE5Cd,EAAKe,KAAI,SAACC,EAAGC,GAAJ,OACR,cAAC,IAAD,CAEEV,SAAUC,aAAWC,YAAYO,EAAEZ,UAAWY,EAAEb,UAChDF,KAAMe,EAAEf,KACRS,YAAaM,EAAEd,KAJjB,SAME,cAAC,IAAD,CAAeS,UAAW,GAAIC,MAAOC,QAAMK,QALtCD,MAQT,cAAC,IAAD,CACEE,YAAaX,aAAWC,aACrB,mBACD,kBACA,KAEFW,SAAU,QCzEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.79de537f.chunk.js","sourcesContent":["module.exports = Cesium;","import \"./App.css\";\nimport { hot } from \"react-hot-loader/root\";\nimport { Viewer, Entity, PointGraphics, CameraFlyTo } from \"resium\";\nimport { Cartesian3, Color } from \"cesium\";\n\nconst data = [\n  {\n    name: \"Marker 1\",\n    type: \"none\",\n    Latitude: 41.07068607720884,\n    Longitude: -112.04589570663498,\n  },\n  {\n    name: \"Marker 2\",\n    type: \"none\",\n    Latitude: 41.07422510941879,\n    Longitude: -112.03226215975637,\n  },\n  {\n    name: \"Marker 3\",\n    type: \"none\",\n    Latitude: 41.07980545548338,\n    Longitude: -112.05546749130166,\n  },\n  {\n    name: \"Marker 4\",\n    type: \"none\",\n    Latitude: 41.07030858917931,\n    Longitude: -112.03224219598731,\n  },\n  {\n    name: \"Marker 6\",\n    type: \"none\",\n    Latitude: 41.07209363699,\n    Longitude: -112.02770421211092,\n  },\n  {\n    name: \"Marker 7\",\n    type: \"none\",\n    Latitude: 41.079815467721275,\n    Longitude: -112.03991174031005,\n  },\n  {\n    name: \"Marker 8\",\n    type: \"none\",\n    Latitude: 41.07260404868231,\n    Longitude: -112.03887702476243,\n  },\n  {\n    name: \"Marker 5\",\n    type: \"none\",\n    Latitude: 41.073405055733886,\n    Longitude: -112.05417214682647,\n  },\n];\n\nfunction App() {\n  return (\n    <Viewer full>\n      <Entity\n        position={Cartesian3.fromDegrees(\n          -112.03324685867265,\n          41.07427233400873\n        )}\n        name={\"Anchor\"}\n        description={\"Home\"}\n      >\n        <PointGraphics pixelSize={10} color={Color.RED} />\n      </Entity>\n      {data.map((d, i) => (\n        <Entity\n          key={i}\n          position={Cartesian3.fromDegrees(d.Longitude, d.Latitude)}\n          name={d.name}\n          description={d.type}\n        >\n          <PointGraphics pixelSize={10} color={Color.BLUE} />\n        </Entity>\n      ))}\n      <CameraFlyTo\n        destination={Cartesian3.fromDegrees(\n          -112.03324685867265,\n          41.07427233400873,\n          1000000\n        )}\n        duration={3}\n      />\n    </Viewer>\n  );\n}\n\nexport default hot(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}